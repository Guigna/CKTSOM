// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// train_Rcpp
Rcpp::DataFrame train_Rcpp(int numberOfChildrenperNode, int treeHeight, float initialLearningRate, float finalLearningRate, int initialRadius, int finalRadius, int iterations, Rcpp::List lst, Rcpp::CharacterVector Names);
RcppExport SEXP CKTSOM_train_Rcpp(SEXP numberOfChildrenperNodeSEXP, SEXP treeHeightSEXP, SEXP initialLearningRateSEXP, SEXP finalLearningRateSEXP, SEXP initialRadiusSEXP, SEXP finalRadiusSEXP, SEXP iterationsSEXP, SEXP lstSEXP, SEXP NamesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type numberOfChildrenperNode(numberOfChildrenperNodeSEXP);
    Rcpp::traits::input_parameter< int >::type treeHeight(treeHeightSEXP);
    Rcpp::traits::input_parameter< float >::type initialLearningRate(initialLearningRateSEXP);
    Rcpp::traits::input_parameter< float >::type finalLearningRate(finalLearningRateSEXP);
    Rcpp::traits::input_parameter< int >::type initialRadius(initialRadiusSEXP);
    Rcpp::traits::input_parameter< int >::type finalRadius(finalRadiusSEXP);
    Rcpp::traits::input_parameter< int >::type iterations(iterationsSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type lst(lstSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type Names(NamesSEXP);
    rcpp_result_gen = Rcpp::wrap(train_Rcpp(numberOfChildrenperNode, treeHeight, initialLearningRate, finalLearningRate, initialRadius, finalRadius, iterations, lst, Names));
    return rcpp_result_gen;
END_RCPP
}
// FindBMU
int FindBMU(Rcpp::List listNeuron, Rcpp::NumericVector stimulus);
RcppExport SEXP CKTSOM_FindBMU(SEXP listNeuronSEXP, SEXP stimulusSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type listNeuron(listNeuronSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type stimulus(stimulusSEXP);
    rcpp_result_gen = Rcpp::wrap(FindBMU(listNeuron, stimulus));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_hello
List rcpp_hello();
RcppExport SEXP CKTSOM_rcpp_hello() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpp_hello());
    return rcpp_result_gen;
END_RCPP
}
